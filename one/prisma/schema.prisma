generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
}
  
model Profile{
    id String @id @default(uuid())
    userId String @unique
    name String
    imageUrl String @db.Text
    email String @db.Text

    servers Server[]
    members Member[]
    channels Channel[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Server{
  id String @id @default(uuid())
  name String
  imageUrl String @db.Text
  inviteCode String @db.Text

  profileID String
  profile Profile @relation(fields: [profileID], references: [id], onDelete: Cascade)

  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileID])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id String @id @default(uuid())
  role MemberRole @default(GUEST)

  profileID String
  profile Profile @relation(fields: [profileID], references: [id], onDelete: Cascade)

  serverID String
  server Server @relation(fields: [serverID], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileID])
  @@index([serverID])
}

enum ChannelType {
  TEXT
  VOICE
  VIDEO
}

model Channel {
  id String @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverID String
  server Server @relation(fields: [serverID], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverID])
}